# Generated by Django 5.2.3 on 2025-07-04 05:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "category_type",
                    models.CharField(
                        choices=[
                            ("jobs", "Jobs"),
                            ("housing", "Housing"),
                            ("roommates", "Roommates"),
                            ("legal", "Legal Services"),
                            ("marketplace", "Marketplace"),
                            ("services", "Services"),
                            ("community", "Community Events"),
                            ("education", "Education & Training"),
                            ("transportation", "Transportation"),
                            ("business", "Business Network"),
                            ("mentorship", "Mentorship"),
                            ("volunteer", "Volunteer Opportunities"),
                            ("social", "Social Groups"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("icon", models.CharField(blank=True, max_length=50)),
            ],
            options={
                "verbose_name_plural": "Categories",
            },
        ),
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name_plural": "Cities",
                "ordering": [
                    "state_province__country__name",
                    "state_province__name",
                    "name",
                ],
            },
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("code", models.CharField(max_length=2, unique=True)),
                ("code3", models.CharField(max_length=3, unique=True)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name_plural": "Countries",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Listing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("pending", "Pending Review"),
                            ("active", "Active/Public"),
                            ("featured", "Featured"),
                            ("paused", "Paused"),
                            ("closed", "Closed"),
                            ("expired", "Expired"),
                            ("rejected", "Rejected"),
                            ("flagged", "Flagged"),
                            ("suspended", "Suspended"),
                            ("archived", "Archived"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="draft",
                        max_length=15,
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=False, help_text="Whether listing is visible to public"
                    ),
                ),
                (
                    "requires_approval",
                    models.BooleanField(
                        default=True, help_text="Whether listing needs admin approval"
                    ),
                ),
                (
                    "submitted_at",
                    models.DateTimeField(
                        blank=True, help_text="When submitted for review", null=True
                    ),
                ),
                (
                    "approved_at",
                    models.DateTimeField(
                        blank=True, help_text="When approved by admin", null=True
                    ),
                ),
                (
                    "rejection_reason",
                    models.TextField(blank=True, help_text="Reason for rejection"),
                ),
                (
                    "admin_notes",
                    models.TextField(blank=True, help_text="Internal admin notes"),
                ),
                (
                    "auto_publish",
                    models.BooleanField(
                        default=False, help_text="Auto-publish after approval"
                    ),
                ),
                (
                    "publish_at",
                    models.DateTimeField(
                        blank=True, help_text="Schedule publication time", null=True
                    ),
                ),
                ("neighborhood", models.CharField(blank=True, max_length=100)),
                ("address_line_1", models.CharField(blank=True, max_length=200)),
                ("address_line_2", models.CharField(blank=True, max_length=200)),
                ("zip_code", models.CharField(blank=True, max_length=20)),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                ("contact_email", models.EmailField(max_length=254)),
                ("contact_phone", models.CharField(blank=True, max_length=20)),
                ("website_url", models.URLField(blank=True)),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("normal", "Normal"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="normal",
                        max_length=10,
                    ),
                ),
                ("is_featured", models.BooleanField(default=False)),
                ("views_count", models.PositiveIntegerField(default=0)),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True, help_text="When listing expires", null=True
                    ),
                ),
                (
                    "auto_renew",
                    models.BooleanField(
                        default=False, help_text="Auto-renew when expired"
                    ),
                ),
                (
                    "renewal_period_days",
                    models.PositiveIntegerField(
                        default=30, help_text="Days to extend when renewing"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "last_bumped_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When listing was last bumped up",
                        null=True,
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Admin who approved",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_listings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="listings.category",
                    ),
                ),
                (
                    "city",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="listings.city",
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="listings.country",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="LawyerListing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("law_firm", models.CharField(blank=True, max_length=200)),
                ("specializations", models.CharField(max_length=200)),
                ("years_experience", models.PositiveIntegerField()),
                ("bar_admissions", models.CharField(max_length=200)),
                ("languages", models.CharField(blank=True, max_length=200)),
                ("license_number", models.CharField(blank=True, max_length=100)),
                (
                    "pricing_model",
                    models.CharField(
                        choices=[
                            ("hourly", "Hourly Rate"),
                            ("flat_fee", "Flat Fee"),
                            ("contingency", "Contingency Fee"),
                            ("retainer", "Retainer"),
                            ("consultation_only", "Consultation Only"),
                            ("pro_bono", "Pro Bono"),
                            ("varies", "Varies by Case"),
                        ],
                        default="varies",
                        max_length=20,
                    ),
                ),
                (
                    "hourly_rate",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                (
                    "consultation_fee",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                ("currency", models.CharField(default="USD", max_length=3)),
                ("accepts_pro_bono", models.BooleanField(default=False)),
                ("free_consultation", models.BooleanField(default=False)),
                ("offers_payment_plans", models.BooleanField(default=False)),
                ("virtual_consultations", models.BooleanField(default=True)),
                (
                    "listing",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="listings.listing",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="JobListing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "job_type",
                    models.CharField(
                        choices=[
                            ("full_time", "Full Time"),
                            ("part_time", "Part Time"),
                            ("contract", "Contract"),
                            ("temporary", "Temporary"),
                            ("internship", "Internship"),
                            ("freelance", "Freelance"),
                        ],
                        max_length=20,
                    ),
                ),
                ("company_name", models.CharField(max_length=200)),
                (
                    "salary_min",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "salary_max",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "salary_period",
                    models.CharField(
                        choices=[
                            ("hourly", "Hourly"),
                            ("monthly", "Monthly"),
                            ("yearly", "Yearly"),
                        ],
                        default="yearly",
                        max_length=20,
                    ),
                ),
                ("salary_currency", models.CharField(default="USD", max_length=3)),
                ("salary_negotiable", models.BooleanField(default=False)),
                (
                    "bonus_info",
                    models.TextField(
                        blank=True, help_text="Bonus, commission, stock options, etc."
                    ),
                ),
                ("benefits", models.TextField(blank=True)),
                ("requirements", models.TextField()),
                ("visa_sponsorship", models.BooleanField(default=False)),
                ("remote_work", models.BooleanField(default=False)),
                (
                    "listing",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="listings.listing",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HousingListing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "housing_type",
                    models.CharField(
                        choices=[
                            ("apartment", "Apartment"),
                            ("house", "House"),
                            ("room", "Room"),
                            ("studio", "Studio"),
                            ("condo", "Condo"),
                            ("shared", "Shared Housing"),
                        ],
                        max_length=20,
                    ),
                ),
                ("bedrooms", models.PositiveIntegerField()),
                ("bathrooms", models.DecimalField(decimal_places=1, max_digits=3)),
                ("square_feet", models.PositiveIntegerField(blank=True, null=True)),
                ("rent_amount", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "rent_period",
                    models.CharField(
                        choices=[
                            ("monthly", "Monthly"),
                            ("weekly", "Weekly"),
                            ("daily", "Daily"),
                        ],
                        default="monthly",
                        max_length=20,
                    ),
                ),
                ("rent_currency", models.CharField(default="USD", max_length=3)),
                ("rent_negotiable", models.BooleanField(default=False)),
                (
                    "deposit_required",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "utilities_cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                ("utilities_included", models.BooleanField(default=False)),
                ("furnished", models.BooleanField(default=False)),
                ("pets_allowed", models.BooleanField(default=False)),
                ("parking_available", models.BooleanField(default=False)),
                ("laundry_available", models.BooleanField(default=False)),
                (
                    "lease_term_min",
                    models.PositiveIntegerField(
                        default=1, help_text="Minimum lease term in months"
                    ),
                ),
                ("available_date", models.DateField(blank=True, null=True)),
                (
                    "listing",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="listings.listing",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ListingImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="listings/")),
                ("caption", models.CharField(blank=True, max_length=200)),
                ("is_primary", models.BooleanField(default=False)),
                (
                    "listing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="listings.listing",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ListingStatusHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("old_status", models.CharField(blank=True, max_length=15)),
                ("new_status", models.CharField(max_length=15)),
                ("change_reason", models.TextField(blank=True)),
                ("changed_at", models.DateTimeField(auto_now_add=True)),
                (
                    "changed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "listing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="status_history",
                        to="listings.listing",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Listing Status Histories",
                "ordering": ["-changed_at"],
            },
        ),
        migrations.CreateModel(
            name="MarketplaceListing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "item_category",
                    models.CharField(
                        choices=[
                            ("electronics", "Electronics"),
                            ("furniture", "Furniture"),
                            ("clothing", "Clothing & Accessories"),
                            ("books", "Books & Media"),
                            ("home_garden", "Home & Garden"),
                            ("sports", "Sports & Recreation"),
                            ("vehicles", "Vehicles"),
                            ("appliances", "Appliances"),
                            ("tools", "Tools"),
                            ("toys", "Toys & Games"),
                            ("musical_instruments", "Musical Instruments"),
                            ("art_crafts", "Arts & Crafts"),
                            ("other", "Other"),
                        ],
                        max_length=30,
                    ),
                ),
                ("brand", models.CharField(blank=True, max_length=100)),
                ("model", models.CharField(blank=True, max_length=100)),
                (
                    "condition",
                    models.CharField(
                        choices=[
                            ("new", "New"),
                            ("like_new", "Like New"),
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("fair", "Fair"),
                            ("poor", "Poor"),
                            ("for_parts", "For Parts/Not Working"),
                        ],
                        max_length=20,
                    ),
                ),
                ("year_purchased", models.PositiveIntegerField(blank=True, null=True)),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("currency", models.CharField(default="USD", max_length=3)),
                ("price_negotiable", models.BooleanField(default=False)),
                ("accepting_trades", models.BooleanField(default=False)),
                (
                    "trade_preferences",
                    models.TextField(
                        blank=True, help_text="What items you'd accept in trade"
                    ),
                ),
                (
                    "dimensions",
                    models.CharField(blank=True, help_text="L x W x H", max_length=100),
                ),
                ("weight", models.CharField(blank=True, max_length=50)),
                ("color", models.CharField(blank=True, max_length=50)),
                ("material", models.CharField(blank=True, max_length=100)),
                ("quantity_available", models.PositiveIntegerField(default=1)),
                ("pickup_available", models.BooleanField(default=True)),
                ("delivery_available", models.BooleanField(default=False)),
                (
                    "delivery_fee",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                ("shipping_available", models.BooleanField(default=False)),
                (
                    "original_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "purchase_receipt",
                    models.BooleanField(
                        default=False, help_text="Do you have the original receipt?"
                    ),
                ),
                ("warranty_remaining", models.BooleanField(default=False)),
                ("warranty_details", models.TextField(blank=True)),
                (
                    "listing",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="marketplacelisting",
                        to="listings.listing",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("subject", models.CharField(max_length=200)),
                ("message", models.TextField()),
                ("is_read", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "listing",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="listings.listing",
                    ),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="RoommateListing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "room_type",
                    models.CharField(
                        choices=[
                            ("private_room", "Private Room"),
                            ("shared_room", "Shared Room"),
                            ("master_bedroom", "Master Bedroom"),
                            ("studio_share", "Studio Share"),
                        ],
                        max_length=20,
                    ),
                ),
                ("monthly_rent", models.DecimalField(decimal_places=2, max_digits=8)),
                ("rent_currency", models.CharField(default="USD", max_length=3)),
                (
                    "deposit_required",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                (
                    "utilities_cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                ("utilities_included", models.BooleanField(default=False)),
                ("private_bathroom", models.BooleanField(default=False)),
                ("furnished", models.BooleanField(default=False)),
                ("has_closet", models.BooleanField(default=True)),
                ("window_available", models.BooleanField(default=True)),
                ("shared_kitchen", models.BooleanField(default=True)),
                ("shared_living_room", models.BooleanField(default=True)),
                ("parking_available", models.BooleanField(default=False)),
                ("laundry_available", models.BooleanField(default=False)),
                (
                    "gender_preference",
                    models.CharField(
                        choices=[
                            ("any", "Any Gender"),
                            ("male", "Male Only"),
                            ("female", "Female Only"),
                            ("non_binary", "Non-Binary"),
                        ],
                        default="any",
                        max_length=20,
                    ),
                ),
                (
                    "age_min",
                    models.PositiveIntegerField(
                        blank=True, help_text="Minimum age preference", null=True
                    ),
                ),
                (
                    "age_max",
                    models.PositiveIntegerField(
                        blank=True, help_text="Maximum age preference", null=True
                    ),
                ),
                ("students_welcome", models.BooleanField(default=True)),
                ("working_professionals", models.BooleanField(default=True)),
                ("pets_allowed", models.BooleanField(default=False)),
                ("smoking_allowed", models.BooleanField(default=False)),
                (
                    "lease_term_months",
                    models.PositiveIntegerField(
                        default=12, help_text="Lease term in months"
                    ),
                ),
                ("move_in_date", models.DateField(blank=True, null=True)),
                ("flexible_dates", models.BooleanField(default=False)),
                ("current_roommates_count", models.PositiveIntegerField(default=0)),
                ("total_bedrooms", models.PositiveIntegerField()),
                (
                    "total_bathrooms",
                    models.DecimalField(decimal_places=1, max_digits=3),
                ),
                (
                    "listing",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="roommate",
                        to="listings.listing",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ServiceListing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "service_category",
                    models.CharField(
                        choices=[
                            ("home_services", "Home Services"),
                            ("tutoring", "Tutoring & Education"),
                            ("tech_support", "Tech Support"),
                            ("translation", "Translation Services"),
                            ("photography", "Photography"),
                            ("event_planning", "Event Planning"),
                            ("consulting", "Consulting"),
                            ("fitness", "Fitness & Health"),
                            ("childcare", "Childcare"),
                            ("pet_services", "Pet Services"),
                            ("automotive", "Automotive Services"),
                            ("other", "Other Services"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "pricing_type",
                    models.CharField(
                        choices=[
                            ("hourly", "Hourly Rate"),
                            ("fixed", "Fixed Price"),
                            ("per_session", "Per Session"),
                            ("per_project", "Per Project"),
                            ("consultation", "Consultation Fee"),
                            ("free", "Free"),
                            ("varies", "Varies"),
                        ],
                        default="hourly",
                        max_length=20,
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                ("currency", models.CharField(default="USD", max_length=3)),
                ("price_negotiable", models.BooleanField(default=False)),
                (
                    "experience_years",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("languages_offered", models.CharField(blank=True, max_length=200)),
                ("certifications", models.TextField(blank=True)),
                ("available_weekdays", models.BooleanField(default=True)),
                ("available_weekends", models.BooleanField(default=False)),
                ("available_evenings", models.BooleanField(default=False)),
                ("remote_service", models.BooleanField(default=False)),
                (
                    "travel_radius_miles",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "listing",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="servicelisting",
                        to="listings.listing",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StateProvince",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("short_name", models.CharField(blank=True, max_length=10)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="states",
                        to="listings.country",
                    ),
                ),
            ],
            options={
                "ordering": ["country__name", "name"],
                "unique_together": {("name", "country")},
            },
        ),
        migrations.AddField(
            model_name="listing",
            name="state_province",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="listings.stateprovince"
            ),
        ),
        migrations.AddField(
            model_name="city",
            name="state_province",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="cities",
                to="listings.stateprovince",
            ),
        ),
        migrations.CreateModel(
            name="Favorite",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "listing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="listings.listing",
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "listing")},
            },
        ),
        migrations.AddIndex(
            model_name="listing",
            index=models.Index(
                fields=["country", "state_province"],
                name="listings_li_country_5c8a80_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="listing",
            index=models.Index(
                fields=["category", "status"], name="listings_li_categor_fcaf14_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="listing",
            index=models.Index(
                fields=["status", "is_public"], name="listings_li_status_64b3b7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="listing",
            index=models.Index(
                fields=["created_at"], name="listings_li_created_740656_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="listing",
            index=models.Index(
                fields=["expires_at"], name="listings_li_expires_79b526_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="listing",
            index=models.Index(
                fields=["approved_at"], name="listings_li_approve_b246d0_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="city",
            unique_together={("name", "state_province")},
        ),
    ]
